1.强密码策略：设置强密码，包括密码长度、复杂性要求（如包含大写字母、小写字母、数字和特殊字符）以及定期更新密码。
2. 登录审计和监控：记录和监控用户的登录行为，包括登录时间、IP 地址、设备信息等，以便及时检测异常登录活动。
3. 防止sql注入
在 MyBatis 中，使用参数化查询可以避免 SQL 注入攻击。具体实现方式是在 Mapper XML 文件中使用占位符${}或者#{}来代替查询条件中的变量，然后将变量传入到查询语句中。例如：
在代码中使用#{}占位符，不要使用${}会导致SQL注入风险，${}为字符串替换，即 sql 拼接。
<select id="getUserByName" resultType="User">
    SELECT * FROM users WHERE username = #{name}
</select>

////--------------待补充


